{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOekpuQ0rp2PgLjmtWI+6te"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Linear Regression Practical"],"metadata":{"id":"2CPlJqL-cV4s"}},{"cell_type":"markdown","source":["## Import Library and Datasets"],"metadata":{"id":"MlkTs9XCcbq6"}},{"cell_type":"code","source":["from sklearn.datasets import fetch_california_housing"],"metadata":{"id":"oIJo8cu1bqAD","executionInfo":{"status":"ok","timestamp":1704222047436,"user_tz":-300,"elapsed":2698,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"EOc9Zyq1bvJo","executionInfo":{"status":"ok","timestamp":1704222048754,"user_tz":-300,"elapsed":1320,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["california_housing = fetch_california_housing(as_frame=True)"],"metadata":{"id":"hoR8hZ4Lcm_W","executionInfo":{"status":"ok","timestamp":1704222048754,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(california_housing)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a0saFQQadEds","executionInfo":{"status":"ok","timestamp":1704222048754,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"8cc1e7cf-f180-4edb-89ff-384e826a0199"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{'data':        MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  \n","0        -122.23  \n","1        -122.22  \n","2        -122.24  \n","3        -122.25  \n","4        -122.25  \n","...          ...  \n","20635    -121.09  \n","20636    -121.21  \n","20637    -121.22  \n","20638    -121.32  \n","20639    -121.24  \n","\n","[20640 rows x 8 columns], 'target': 0        4.526\n","1        3.585\n","2        3.521\n","3        3.413\n","4        3.422\n","         ...  \n","20635    0.781\n","20636    0.771\n","20637    0.923\n","20638    0.847\n","20639    0.894\n","Name: MedHouseVal, Length: 20640, dtype: float64, 'frame':        MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  MedHouseVal  \n","0        -122.23        4.526  \n","1        -122.22        3.585  \n","2        -122.24        3.521  \n","3        -122.25        3.413  \n","4        -122.25        3.422  \n","...          ...          ...  \n","20635    -121.09        0.781  \n","20636    -121.21        0.771  \n","20637    -121.22        0.923  \n","20638    -121.32        0.847  \n","20639    -121.24        0.894  \n","\n","[20640 rows x 9 columns], 'target_names': ['MedHouseVal'], 'feature_names': ['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup', 'Latitude', 'Longitude'], 'DESCR': '.. _california_housing_dataset:\\n\\nCalifornia Housing dataset\\n--------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 20640\\n\\n    :Number of Attributes: 8 numeric, predictive attributes and the target\\n\\n    :Attribute Information:\\n        - MedInc        median income in block group\\n        - HouseAge      median house age in block group\\n        - AveRooms      average number of rooms per household\\n        - AveBedrms     average number of bedrooms per household\\n        - Population    block group population\\n        - AveOccup      average number of household members\\n        - Latitude      block group latitude\\n        - Longitude     block group longitude\\n\\n    :Missing Attribute Values: None\\n\\nThis dataset was obtained from the StatLib repository.\\nhttps://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html\\n\\nThe target variable is the median house value for California districts,\\nexpressed in hundreds of thousands of dollars ($100,000).\\n\\nThis dataset was derived from the 1990 U.S. census, using one row per census\\nblock group. A block group is the smallest geographical unit for which the U.S.\\nCensus Bureau publishes sample data (a block group typically has a population\\nof 600 to 3,000 people).\\n\\nA household is a group of people residing within a home. Since the average\\nnumber of rooms and bedrooms in this dataset are provided per household, these\\ncolumns may take surprisingly large values for block groups with few households\\nand many empty houses, such as vacation resorts.\\n\\nIt can be downloaded/loaded using the\\n:func:`sklearn.datasets.fetch_california_housing` function.\\n\\n.. topic:: References\\n\\n    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,\\n      Statistics and Probability Letters, 33 (1997) 291-297\\n'}\n"]}]},{"cell_type":"code","source":["dataset=pd.DataFrame(california_housing.data)"],"metadata":{"id":"7MixuMpocsj5","executionInfo":{"status":"ok","timestamp":1704222048755,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rGa7MaIwc7ap","executionInfo":{"status":"ok","timestamp":1704222048755,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"11e39009-aa77-4bdf-ba96-8af6aef18527"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0  8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1  8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2  7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3  5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4  3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","\n","   Longitude  \n","0    -122.23  \n","1    -122.22  \n","2    -122.24  \n","3    -122.25  \n","4    -122.25  "],"text/html":["\n","  <div id=\"df-2e4f53a8-ac0e-4104-a5c2-f0be2f98c0a1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e4f53a8-ac0e-4104-a5c2-f0be2f98c0a1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e4f53a8-ac0e-4104-a5c2-f0be2f98c0a1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e4f53a8-ac0e-4104-a5c2-f0be2f98c0a1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c505f8a0-69ab-4396-a2f2-ac03592d27e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c505f8a0-69ab-4396-a2f2-ac03592d27e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c505f8a0-69ab-4396-a2f2-ac03592d27e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Divide Data into x and y\n","X=dataset\n","y=california_housing.target"],"metadata":{"id":"tpkiepAGeJIO","executionInfo":{"status":"ok","timestamp":1704222048755,"user_tz":-300,"elapsed":5,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["X\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"osiRHqAyeT4I","executionInfo":{"status":"ok","timestamp":1704222048755,"user_tz":-300,"elapsed":5,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"792b7894-a072-4658-c0b3-1175bfa0cbc3"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  \n","0        -122.23  \n","1        -122.22  \n","2        -122.24  \n","3        -122.25  \n","4        -122.25  \n","...          ...  \n","20635    -121.09  \n","20636    -121.21  \n","20637    -121.22  \n","20638    -121.32  \n","20639    -121.24  \n","\n","[20640 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-eb305f76-4dd1-4d5c-af25-a206df425d14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20635</th>\n","      <td>1.5603</td>\n","      <td>25.0</td>\n","      <td>5.045455</td>\n","      <td>1.133333</td>\n","      <td>845.0</td>\n","      <td>2.560606</td>\n","      <td>39.48</td>\n","      <td>-121.09</td>\n","    </tr>\n","    <tr>\n","      <th>20636</th>\n","      <td>2.5568</td>\n","      <td>18.0</td>\n","      <td>6.114035</td>\n","      <td>1.315789</td>\n","      <td>356.0</td>\n","      <td>3.122807</td>\n","      <td>39.49</td>\n","      <td>-121.21</td>\n","    </tr>\n","    <tr>\n","      <th>20637</th>\n","      <td>1.7000</td>\n","      <td>17.0</td>\n","      <td>5.205543</td>\n","      <td>1.120092</td>\n","      <td>1007.0</td>\n","      <td>2.325635</td>\n","      <td>39.43</td>\n","      <td>-121.22</td>\n","    </tr>\n","    <tr>\n","      <th>20638</th>\n","      <td>1.8672</td>\n","      <td>18.0</td>\n","      <td>5.329513</td>\n","      <td>1.171920</td>\n","      <td>741.0</td>\n","      <td>2.123209</td>\n","      <td>39.43</td>\n","      <td>-121.32</td>\n","    </tr>\n","    <tr>\n","      <th>20639</th>\n","      <td>2.3886</td>\n","      <td>16.0</td>\n","      <td>5.254717</td>\n","      <td>1.162264</td>\n","      <td>1387.0</td>\n","      <td>2.616981</td>\n","      <td>39.37</td>\n","      <td>-121.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20640 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb305f76-4dd1-4d5c-af25-a206df425d14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb305f76-4dd1-4d5c-af25-a206df425d14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb305f76-4dd1-4d5c-af25-a206df425d14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5afa1b59-114b-4b8e-ab74-80e552d3a9a4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5afa1b59-114b-4b8e-ab74-80e552d3a9a4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5afa1b59-114b-4b8e-ab74-80e552d3a9a4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_592ef2d6-649f-4111-9f11-f25c550544b7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataset')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_592ef2d6-649f-4111-9f11-f25c550544b7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataset');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"avm9uheYeVJV","executionInfo":{"status":"ok","timestamp":1704222049395,"user_tz":-300,"elapsed":1,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"d0ba3cd6-4144-4683-bb1b-1a5d7b293c47"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        4.526\n","1        3.585\n","2        3.521\n","3        3.413\n","4        3.422\n","         ...  \n","20635    0.781\n","20636    0.771\n","20637    0.923\n","20638    0.847\n","20639    0.894\n","Name: MedHouseVal, Length: 20640, dtype: float64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# train test split\n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.3, random_state=42)"],"metadata":{"id":"fZU3O7sceVfq","executionInfo":{"status":"ok","timestamp":1704222050174,"user_tz":-300,"elapsed":5,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["x_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"VNTLEZ8JeogF","executionInfo":{"status":"ok","timestamp":1704222050830,"user_tz":-300,"elapsed":3,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"d690c0bc-7cfb-4377-e848-547dd14649e0"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","7061   4.1312      35.0  5.882353   0.975490      1218.0  2.985294     33.93   \n","14689  2.8631      20.0  4.401210   1.076613       999.0  2.014113     32.79   \n","17323  4.2026      24.0  5.617544   0.989474       731.0  2.564912     34.59   \n","10056  3.1094      14.0  5.869565   1.094203       302.0  2.188406     39.26   \n","15750  3.3068      52.0  4.801205   1.066265      1526.0  2.298193     37.77   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","11284  6.3700      35.0  6.129032   0.926267       658.0  3.032258     33.78   \n","11964  3.0500      33.0  6.868597   1.269488      1753.0  3.904232     34.02   \n","5390   2.9344      36.0  3.986717   1.079696      1756.0  3.332068     34.03   \n","860    5.7192      15.0  6.395349   1.067979      1777.0  3.178891     37.58   \n","15795  2.5755      52.0  3.402576   1.058776      2619.0  2.108696     37.77   \n","\n","       Longitude  \n","7061     -118.02  \n","14689    -117.09  \n","17323    -120.14  \n","10056    -121.00  \n","15750    -122.45  \n","...          ...  \n","11284    -117.96  \n","11964    -117.43  \n","5390     -118.38  \n","860      -121.96  \n","15795    -122.42  \n","\n","[14448 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-bc16390f-bdb7-4618-9fac-0d968523f4b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7061</th>\n","      <td>4.1312</td>\n","      <td>35.0</td>\n","      <td>5.882353</td>\n","      <td>0.975490</td>\n","      <td>1218.0</td>\n","      <td>2.985294</td>\n","      <td>33.93</td>\n","      <td>-118.02</td>\n","    </tr>\n","    <tr>\n","      <th>14689</th>\n","      <td>2.8631</td>\n","      <td>20.0</td>\n","      <td>4.401210</td>\n","      <td>1.076613</td>\n","      <td>999.0</td>\n","      <td>2.014113</td>\n","      <td>32.79</td>\n","      <td>-117.09</td>\n","    </tr>\n","    <tr>\n","      <th>17323</th>\n","      <td>4.2026</td>\n","      <td>24.0</td>\n","      <td>5.617544</td>\n","      <td>0.989474</td>\n","      <td>731.0</td>\n","      <td>2.564912</td>\n","      <td>34.59</td>\n","      <td>-120.14</td>\n","    </tr>\n","    <tr>\n","      <th>10056</th>\n","      <td>3.1094</td>\n","      <td>14.0</td>\n","      <td>5.869565</td>\n","      <td>1.094203</td>\n","      <td>302.0</td>\n","      <td>2.188406</td>\n","      <td>39.26</td>\n","      <td>-121.00</td>\n","    </tr>\n","    <tr>\n","      <th>15750</th>\n","      <td>3.3068</td>\n","      <td>52.0</td>\n","      <td>4.801205</td>\n","      <td>1.066265</td>\n","      <td>1526.0</td>\n","      <td>2.298193</td>\n","      <td>37.77</td>\n","      <td>-122.45</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>11284</th>\n","      <td>6.3700</td>\n","      <td>35.0</td>\n","      <td>6.129032</td>\n","      <td>0.926267</td>\n","      <td>658.0</td>\n","      <td>3.032258</td>\n","      <td>33.78</td>\n","      <td>-117.96</td>\n","    </tr>\n","    <tr>\n","      <th>11964</th>\n","      <td>3.0500</td>\n","      <td>33.0</td>\n","      <td>6.868597</td>\n","      <td>1.269488</td>\n","      <td>1753.0</td>\n","      <td>3.904232</td>\n","      <td>34.02</td>\n","      <td>-117.43</td>\n","    </tr>\n","    <tr>\n","      <th>5390</th>\n","      <td>2.9344</td>\n","      <td>36.0</td>\n","      <td>3.986717</td>\n","      <td>1.079696</td>\n","      <td>1756.0</td>\n","      <td>3.332068</td>\n","      <td>34.03</td>\n","      <td>-118.38</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>5.7192</td>\n","      <td>15.0</td>\n","      <td>6.395349</td>\n","      <td>1.067979</td>\n","      <td>1777.0</td>\n","      <td>3.178891</td>\n","      <td>37.58</td>\n","      <td>-121.96</td>\n","    </tr>\n","    <tr>\n","      <th>15795</th>\n","      <td>2.5755</td>\n","      <td>52.0</td>\n","      <td>3.402576</td>\n","      <td>1.058776</td>\n","      <td>2619.0</td>\n","      <td>2.108696</td>\n","      <td>37.77</td>\n","      <td>-122.42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14448 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc16390f-bdb7-4618-9fac-0d968523f4b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bc16390f-bdb7-4618-9fac-0d968523f4b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bc16390f-bdb7-4618-9fac-0d968523f4b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-29856704-b4fb-47c0-9b73-7a636065e47d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29856704-b4fb-47c0-9b73-7a636065e47d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-29856704-b4fb-47c0-9b73-7a636065e47d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_21ac6e0b-cd9f-4a03-9414-da941cfaaffe\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_21ac6e0b-cd9f-4a03-9414-da941cfaaffe button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jmct5qe2fDsu","executionInfo":{"status":"ok","timestamp":1704222052898,"user_tz":-300,"elapsed":3,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"00fec32e-a8b7-4557-a2b1-97e7e0e3be7c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7061     1.93800\n","14689    1.69700\n","17323    2.59800\n","10056    1.36100\n","15750    5.00001\n","          ...   \n","11284    2.29200\n","11964    0.97800\n","5390     2.22100\n","860      2.83500\n","15795    3.25000\n","Name: MedHouseVal, Length: 14448, dtype: float64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["from re import S\n","# Standarization Process\n","from sklearn.preprocessing import StandardScaler\n","scaler=StandardScaler()"],"metadata":{"id":"hUR2Sk8Rfejh","executionInfo":{"status":"ok","timestamp":1704222093812,"user_tz":-300,"elapsed":650,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["x_train=scaler.fit_transform(x_train)"],"metadata":{"id":"c4JcXUOpgHpE","executionInfo":{"status":"ok","timestamp":1704222093812,"user_tz":-300,"elapsed":1,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["x_test=scaler.transform(x_test)"],"metadata":{"id":"JUnGAzH2f4RS","executionInfo":{"status":"ok","timestamp":1704222094495,"user_tz":-300,"elapsed":1,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Linear Regression\n","from sklearn.linear_model import LinearRegression\n","# Cross Validation\n","from sklearn.model_selection import cross_val_score\n"],"metadata":{"id":"xHVZ7M0PfEr2","executionInfo":{"status":"ok","timestamp":1704222096251,"user_tz":-300,"elapsed":4,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["LR=LinearRegression()\n","LR.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"-9GuNcFagRKi","executionInfo":{"status":"ok","timestamp":1704222098725,"user_tz":-300,"elapsed":632,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"2b5189b1-b1db-4f0d-c8aa-73afcafd8d6c"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["mse=cross_val_score(LR,x_train,y_train,scoring='neg_mean_squared_error')"],"metadata":{"id":"kXpJ9MBIgVOe","executionInfo":{"status":"ok","timestamp":1704221695228,"user_tz":-300,"elapsed":4,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["np.mean(mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TwnVfsPihOZO","executionInfo":{"status":"ok","timestamp":1704221695228,"user_tz":-300,"elapsed":4,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"25b39d29-57a4-4cde-899b-fb49cfd7b46e"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.5268253746355749"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# Prediction\n","y_pred=LR.predict(x_test)"],"metadata":{"id":"xMvT1rxBhgFf","executionInfo":{"status":"ok","timestamp":1704222074076,"user_tz":-300,"elapsed":527,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(y_pred-y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":668},"id":"tBUbXeC-hxBk","executionInfo":{"status":"ok","timestamp":1704221829682,"user_tz":-300,"elapsed":1151,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"8a6dfc95-2721-4b3a-a148-a642b0d10405"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-60-2ec464f7eeeb>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(y_pred-y_test)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='MedHouseVal', ylabel='Density'>"]},"metadata":{},"execution_count":60},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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XnoJb7zxBt59913ccMMN2L9/P9LT06HX6/Hoo48C8I3PakfuE/CNz2mHCPIKK1asECNGjGj1uYqKChEYGCi2bdsmHTt27JgAILKzs7upQs+52r0KIcTEiRPFY4891m31dJUnn3xSTJgwoc3n7Xa7MBqNYtWqVdKxiooKodFoxAcffNAdJXpMe/cqhBDz588X06dP756CutFjjz0m+vfvL+x2u899Vptrfp9C+M7nVAghpk2bJhYuXOhybObMmWLu3LlCCN/5rLZ3n0L47ue0Nexi8yInT55EXFwc+vXrh7lz5yI/Px8AkJOTg4aGBqSmpkrnDho0CAkJCcjOzpar3GvS1r06vf/++4iKisLQoUOxbNky1NbWylSp+/71r39h7NixuPvuuxETE4NRo0bhrbfekp4/e/YsTCaTy9+rXq9HcnKy1/29tnevTrt370ZMTAyuv/56PPTQQygtLZWhWs+xWq147733sHDhQigUCp/8rAJX3qeTL3xOAccCxVlZWThx4gQA4IcffsDXX3+NKVOmAPCdz2p79+nka5/TtrCLzUskJydj48aNuP7661FQUIDnn38et9xyCw4fPgyTyQS1Wn3F5rkGgwEmk0megq/B1e41LCwM9957L/r27Yu4uDgcOnQITz75JHJzc7F9+3a5S++UM2fO4I033kBGRgaefvppfPfdd3j00UehVqsxf/586e/Ouaq8kzf+vbZ3r4Cj2X7mzJlISkrC6dOn8fTTT2PKlCnIzs6GSqWS+Q7c8+GHH6KiogILFiwAAJ/7rDq1vE8APvM5BYCnnnoKZrMZgwYNgkqlgs1mwx/+8AfMnTsXAHzms9refQK++Tltk9xNWOSe8vJyodPpxNtvvy3ef/99oVarrzhn3Lhx4ve//70M1XlW83ttTVZWlgAgTp061c2VXZvAwECRkpLicuyRRx4RN954oxBCiG+++UYAEJcuXXI55+677xa//OUvu61OT2jvXltz+vRpAUDs2rWrq8vrMnfeeaf46U9/Kn3vq5/VlvfZGm/9nAohxAcffCD69OkjPvjgA3Ho0CGxadMmERERITZu3CiE8J3Panv32Rpf+Jy2hV1sXio8PBzXXXcdTp06BaPRCKvVioqKCpdzCgsLYTQa5SnQg5rfa2uSk5MBoM3ne6rY2FgMGTLE5djgwYOl7kTn313LGU7e+Pfa3r22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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","score=r2_score(y_pred,y_test)"],"metadata":{"id":"I7tWCRVoiBYO","executionInfo":{"status":"ok","timestamp":1704222101660,"user_tz":-300,"elapsed":587,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XvfC-UP4ijcq","executionInfo":{"status":"ok","timestamp":1704222102290,"user_tz":-300,"elapsed":2,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"a39639f4-92b7-4330-9a2c-ce7f55c0e8ae"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3451339380943912"]},"metadata":{},"execution_count":25}]}]}