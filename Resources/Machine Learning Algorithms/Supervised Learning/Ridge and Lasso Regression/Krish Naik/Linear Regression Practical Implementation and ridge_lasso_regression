{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPnu7drgWmeKl60knVX3xth"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Linear Regression Practical"],"metadata":{"id":"2CPlJqL-cV4s"}},{"cell_type":"markdown","source":["## Import Library and Datasets"],"metadata":{"id":"MlkTs9XCcbq6"}},{"cell_type":"code","source":["from sklearn.datasets import fetch_california_housing"],"metadata":{"id":"oIJo8cu1bqAD","executionInfo":{"status":"ok","timestamp":1704268428471,"user_tz":-300,"elapsed":604,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"EOc9Zyq1bvJo","executionInfo":{"status":"ok","timestamp":1704268429109,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["california_housing = fetch_california_housing(as_frame=True)"],"metadata":{"id":"hoR8hZ4Lcm_W","executionInfo":{"status":"ok","timestamp":1704268429109,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["print(california_housing)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a0saFQQadEds","executionInfo":{"status":"ok","timestamp":1704268429110,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"45efd0ab-fe9d-419e-9d4f-d66ba9c4755f"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["{'data':        MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  \n","0        -122.23  \n","1        -122.22  \n","2        -122.24  \n","3        -122.25  \n","4        -122.25  \n","...          ...  \n","20635    -121.09  \n","20636    -121.21  \n","20637    -121.22  \n","20638    -121.32  \n","20639    -121.24  \n","\n","[20640 rows x 8 columns], 'target': 0        4.526\n","1        3.585\n","2        3.521\n","3        3.413\n","4        3.422\n","         ...  \n","20635    0.781\n","20636    0.771\n","20637    0.923\n","20638    0.847\n","20639    0.894\n","Name: MedHouseVal, Length: 20640, dtype: float64, 'frame':        MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  MedHouseVal  \n","0        -122.23        4.526  \n","1        -122.22        3.585  \n","2        -122.24        3.521  \n","3        -122.25        3.413  \n","4        -122.25        3.422  \n","...          ...          ...  \n","20635    -121.09        0.781  \n","20636    -121.21        0.771  \n","20637    -121.22        0.923  \n","20638    -121.32        0.847  \n","20639    -121.24        0.894  \n","\n","[20640 rows x 9 columns], 'target_names': ['MedHouseVal'], 'feature_names': ['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup', 'Latitude', 'Longitude'], 'DESCR': '.. _california_housing_dataset:\\n\\nCalifornia Housing dataset\\n--------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 20640\\n\\n    :Number of Attributes: 8 numeric, predictive attributes and the target\\n\\n    :Attribute Information:\\n        - MedInc        median income in block group\\n        - HouseAge      median house age in block group\\n        - AveRooms      average number of rooms per household\\n        - AveBedrms     average number of bedrooms per household\\n        - Population    block group population\\n        - AveOccup      average number of household members\\n        - Latitude      block group latitude\\n        - Longitude     block group longitude\\n\\n    :Missing Attribute Values: None\\n\\nThis dataset was obtained from the StatLib repository.\\nhttps://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html\\n\\nThe target variable is the median house value for California districts,\\nexpressed in hundreds of thousands of dollars ($100,000).\\n\\nThis dataset was derived from the 1990 U.S. census, using one row per census\\nblock group. A block group is the smallest geographical unit for which the U.S.\\nCensus Bureau publishes sample data (a block group typically has a population\\nof 600 to 3,000 people).\\n\\nA household is a group of people residing within a home. Since the average\\nnumber of rooms and bedrooms in this dataset are provided per household, these\\ncolumns may take surprisingly large values for block groups with few households\\nand many empty houses, such as vacation resorts.\\n\\nIt can be downloaded/loaded using the\\n:func:`sklearn.datasets.fetch_california_housing` function.\\n\\n.. topic:: References\\n\\n    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,\\n      Statistics and Probability Letters, 33 (1997) 291-297\\n'}\n"]}]},{"cell_type":"code","source":["dataset=pd.DataFrame(california_housing.data)"],"metadata":{"id":"7MixuMpocsj5","executionInfo":{"status":"ok","timestamp":1704268429110,"user_tz":-300,"elapsed":5,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"rGa7MaIwc7ap","executionInfo":{"status":"ok","timestamp":1704268429110,"user_tz":-300,"elapsed":5,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"fd5f53f5-7aa1-4b02-f00f-5b7d1e7aaa32"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0  8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1  8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2  7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3  5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4  3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","\n","   Longitude  \n","0    -122.23  \n","1    -122.22  \n","2    -122.24  \n","3    -122.25  \n","4    -122.25  "],"text/html":["\n","  <div id=\"df-f690200a-8ff8-4aa8-9078-e7fbe0e7c4ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f690200a-8ff8-4aa8-9078-e7fbe0e7c4ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f690200a-8ff8-4aa8-9078-e7fbe0e7c4ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f690200a-8ff8-4aa8-9078-e7fbe0e7c4ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b936c5b8-db2f-4365-bfa4-cb9ea5a2a0c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b936c5b8-db2f-4365-bfa4-cb9ea5a2a0c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b936c5b8-db2f-4365-bfa4-cb9ea5a2a0c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# Divide Data into x and y\n","X=dataset\n","y=california_housing.target"],"metadata":{"id":"tpkiepAGeJIO","executionInfo":{"status":"ok","timestamp":1704268430517,"user_tz":-300,"elapsed":1411,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["X\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"osiRHqAyeT4I","executionInfo":{"status":"ok","timestamp":1704268430518,"user_tz":-300,"elapsed":1412,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"a83179d7-962e-4ae7-ed61-cfe033f4e1d1"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","0      8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   \n","1      8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   \n","2      7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   \n","3      5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   \n","4      3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","20635  1.5603      25.0  5.045455   1.133333       845.0  2.560606     39.48   \n","20636  2.5568      18.0  6.114035   1.315789       356.0  3.122807     39.49   \n","20637  1.7000      17.0  5.205543   1.120092      1007.0  2.325635     39.43   \n","20638  1.8672      18.0  5.329513   1.171920       741.0  2.123209     39.43   \n","20639  2.3886      16.0  5.254717   1.162264      1387.0  2.616981     39.37   \n","\n","       Longitude  \n","0        -122.23  \n","1        -122.22  \n","2        -122.24  \n","3        -122.25  \n","4        -122.25  \n","...          ...  \n","20635    -121.09  \n","20636    -121.21  \n","20637    -121.22  \n","20638    -121.32  \n","20639    -121.24  \n","\n","[20640 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-1a40bfb0-3905-4491-ba6c-840e3f78f5c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.3252</td>\n","      <td>41.0</td>\n","      <td>6.984127</td>\n","      <td>1.023810</td>\n","      <td>322.0</td>\n","      <td>2.555556</td>\n","      <td>37.88</td>\n","      <td>-122.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8.3014</td>\n","      <td>21.0</td>\n","      <td>6.238137</td>\n","      <td>0.971880</td>\n","      <td>2401.0</td>\n","      <td>2.109842</td>\n","      <td>37.86</td>\n","      <td>-122.22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.2574</td>\n","      <td>52.0</td>\n","      <td>8.288136</td>\n","      <td>1.073446</td>\n","      <td>496.0</td>\n","      <td>2.802260</td>\n","      <td>37.85</td>\n","      <td>-122.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.6431</td>\n","      <td>52.0</td>\n","      <td>5.817352</td>\n","      <td>1.073059</td>\n","      <td>558.0</td>\n","      <td>2.547945</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.8462</td>\n","      <td>52.0</td>\n","      <td>6.281853</td>\n","      <td>1.081081</td>\n","      <td>565.0</td>\n","      <td>2.181467</td>\n","      <td>37.85</td>\n","      <td>-122.25</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20635</th>\n","      <td>1.5603</td>\n","      <td>25.0</td>\n","      <td>5.045455</td>\n","      <td>1.133333</td>\n","      <td>845.0</td>\n","      <td>2.560606</td>\n","      <td>39.48</td>\n","      <td>-121.09</td>\n","    </tr>\n","    <tr>\n","      <th>20636</th>\n","      <td>2.5568</td>\n","      <td>18.0</td>\n","      <td>6.114035</td>\n","      <td>1.315789</td>\n","      <td>356.0</td>\n","      <td>3.122807</td>\n","      <td>39.49</td>\n","      <td>-121.21</td>\n","    </tr>\n","    <tr>\n","      <th>20637</th>\n","      <td>1.7000</td>\n","      <td>17.0</td>\n","      <td>5.205543</td>\n","      <td>1.120092</td>\n","      <td>1007.0</td>\n","      <td>2.325635</td>\n","      <td>39.43</td>\n","      <td>-121.22</td>\n","    </tr>\n","    <tr>\n","      <th>20638</th>\n","      <td>1.8672</td>\n","      <td>18.0</td>\n","      <td>5.329513</td>\n","      <td>1.171920</td>\n","      <td>741.0</td>\n","      <td>2.123209</td>\n","      <td>39.43</td>\n","      <td>-121.32</td>\n","    </tr>\n","    <tr>\n","      <th>20639</th>\n","      <td>2.3886</td>\n","      <td>16.0</td>\n","      <td>5.254717</td>\n","      <td>1.162264</td>\n","      <td>1387.0</td>\n","      <td>2.616981</td>\n","      <td>39.37</td>\n","      <td>-121.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20640 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a40bfb0-3905-4491-ba6c-840e3f78f5c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a40bfb0-3905-4491-ba6c-840e3f78f5c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a40bfb0-3905-4491-ba6c-840e3f78f5c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c4a620b-377b-47c0-9a00-1036c3315389\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c4a620b-377b-47c0-9a00-1036c3315389')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c4a620b-377b-47c0-9a00-1036c3315389 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c789e9b0-060a-4b75-9057-0867d442e292\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataset')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c789e9b0-060a-4b75-9057-0867d442e292 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataset');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"avm9uheYeVJV","executionInfo":{"status":"ok","timestamp":1704268430518,"user_tz":-300,"elapsed":16,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"502a1e08-06b8-45cd-9ea9-44c8f70206df"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        4.526\n","1        3.585\n","2        3.521\n","3        3.413\n","4        3.422\n","         ...  \n","20635    0.781\n","20636    0.771\n","20637    0.923\n","20638    0.847\n","20639    0.894\n","Name: MedHouseVal, Length: 20640, dtype: float64"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["# train test split\n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.3, random_state=42)"],"metadata":{"id":"fZU3O7sceVfq","executionInfo":{"status":"ok","timestamp":1704268430518,"user_tz":-300,"elapsed":15,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["x_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"VNTLEZ8JeogF","executionInfo":{"status":"ok","timestamp":1704268430518,"user_tz":-300,"elapsed":15,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"6ab122cb-e585-4bf1-daef-f93a80006dab"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \\\n","7061   4.1312      35.0  5.882353   0.975490      1218.0  2.985294     33.93   \n","14689  2.8631      20.0  4.401210   1.076613       999.0  2.014113     32.79   \n","17323  4.2026      24.0  5.617544   0.989474       731.0  2.564912     34.59   \n","10056  3.1094      14.0  5.869565   1.094203       302.0  2.188406     39.26   \n","15750  3.3068      52.0  4.801205   1.066265      1526.0  2.298193     37.77   \n","...       ...       ...       ...        ...         ...       ...       ...   \n","11284  6.3700      35.0  6.129032   0.926267       658.0  3.032258     33.78   \n","11964  3.0500      33.0  6.868597   1.269488      1753.0  3.904232     34.02   \n","5390   2.9344      36.0  3.986717   1.079696      1756.0  3.332068     34.03   \n","860    5.7192      15.0  6.395349   1.067979      1777.0  3.178891     37.58   \n","15795  2.5755      52.0  3.402576   1.058776      2619.0  2.108696     37.77   \n","\n","       Longitude  \n","7061     -118.02  \n","14689    -117.09  \n","17323    -120.14  \n","10056    -121.00  \n","15750    -122.45  \n","...          ...  \n","11284    -117.96  \n","11964    -117.43  \n","5390     -118.38  \n","860      -121.96  \n","15795    -122.42  \n","\n","[14448 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-52b6d0fb-1ab2-442f-9e3f-3bd0133b6e89\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MedInc</th>\n","      <th>HouseAge</th>\n","      <th>AveRooms</th>\n","      <th>AveBedrms</th>\n","      <th>Population</th>\n","      <th>AveOccup</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7061</th>\n","      <td>4.1312</td>\n","      <td>35.0</td>\n","      <td>5.882353</td>\n","      <td>0.975490</td>\n","      <td>1218.0</td>\n","      <td>2.985294</td>\n","      <td>33.93</td>\n","      <td>-118.02</td>\n","    </tr>\n","    <tr>\n","      <th>14689</th>\n","      <td>2.8631</td>\n","      <td>20.0</td>\n","      <td>4.401210</td>\n","      <td>1.076613</td>\n","      <td>999.0</td>\n","      <td>2.014113</td>\n","      <td>32.79</td>\n","      <td>-117.09</td>\n","    </tr>\n","    <tr>\n","      <th>17323</th>\n","      <td>4.2026</td>\n","      <td>24.0</td>\n","      <td>5.617544</td>\n","      <td>0.989474</td>\n","      <td>731.0</td>\n","      <td>2.564912</td>\n","      <td>34.59</td>\n","      <td>-120.14</td>\n","    </tr>\n","    <tr>\n","      <th>10056</th>\n","      <td>3.1094</td>\n","      <td>14.0</td>\n","      <td>5.869565</td>\n","      <td>1.094203</td>\n","      <td>302.0</td>\n","      <td>2.188406</td>\n","      <td>39.26</td>\n","      <td>-121.00</td>\n","    </tr>\n","    <tr>\n","      <th>15750</th>\n","      <td>3.3068</td>\n","      <td>52.0</td>\n","      <td>4.801205</td>\n","      <td>1.066265</td>\n","      <td>1526.0</td>\n","      <td>2.298193</td>\n","      <td>37.77</td>\n","      <td>-122.45</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>11284</th>\n","      <td>6.3700</td>\n","      <td>35.0</td>\n","      <td>6.129032</td>\n","      <td>0.926267</td>\n","      <td>658.0</td>\n","      <td>3.032258</td>\n","      <td>33.78</td>\n","      <td>-117.96</td>\n","    </tr>\n","    <tr>\n","      <th>11964</th>\n","      <td>3.0500</td>\n","      <td>33.0</td>\n","      <td>6.868597</td>\n","      <td>1.269488</td>\n","      <td>1753.0</td>\n","      <td>3.904232</td>\n","      <td>34.02</td>\n","      <td>-117.43</td>\n","    </tr>\n","    <tr>\n","      <th>5390</th>\n","      <td>2.9344</td>\n","      <td>36.0</td>\n","      <td>3.986717</td>\n","      <td>1.079696</td>\n","      <td>1756.0</td>\n","      <td>3.332068</td>\n","      <td>34.03</td>\n","      <td>-118.38</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>5.7192</td>\n","      <td>15.0</td>\n","      <td>6.395349</td>\n","      <td>1.067979</td>\n","      <td>1777.0</td>\n","      <td>3.178891</td>\n","      <td>37.58</td>\n","      <td>-121.96</td>\n","    </tr>\n","    <tr>\n","      <th>15795</th>\n","      <td>2.5755</td>\n","      <td>52.0</td>\n","      <td>3.402576</td>\n","      <td>1.058776</td>\n","      <td>2619.0</td>\n","      <td>2.108696</td>\n","      <td>37.77</td>\n","      <td>-122.42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14448 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52b6d0fb-1ab2-442f-9e3f-3bd0133b6e89')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-52b6d0fb-1ab2-442f-9e3f-3bd0133b6e89 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-52b6d0fb-1ab2-442f-9e3f-3bd0133b6e89');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bda54f44-b335-4975-8b5e-76ac0f539e45\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bda54f44-b335-4975-8b5e-76ac0f539e45')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bda54f44-b335-4975-8b5e-76ac0f539e45 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_091d1f5f-af13-4c76-a926-7dde9ee19469\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_091d1f5f-af13-4c76-a926-7dde9ee19469 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jmct5qe2fDsu","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":15,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"8c835a53-76db-4d32-8c91-165b6f568e5e"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7061     1.93800\n","14689    1.69700\n","17323    2.59800\n","10056    1.36100\n","15750    5.00001\n","          ...   \n","11284    2.29200\n","11964    0.97800\n","5390     2.22100\n","860      2.83500\n","15795    3.25000\n","Name: MedHouseVal, Length: 14448, dtype: float64"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["from re import S\n","# Standarization Process\n","from sklearn.preprocessing import StandardScaler\n","scaler=StandardScaler()"],"metadata":{"id":"hUR2Sk8Rfejh","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":14,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["x_train=scaler.fit_transform(x_train)"],"metadata":{"id":"c4JcXUOpgHpE","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":14,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["x_test=scaler.transform(x_test)"],"metadata":{"id":"JUnGAzH2f4RS","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":14,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["# Linear Regression\n","from sklearn.linear_model import LinearRegression\n","# Cross Validation\n","from sklearn.model_selection import cross_val_score\n"],"metadata":{"id":"xHVZ7M0PfEr2","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":14,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["LR=LinearRegression()\n","LR.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"-9GuNcFagRKi","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":13,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"880303e7-e647-4082-873b-be488343b0bd"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["mse=cross_val_score(LR,x_train,y_train,scoring='neg_mean_squared_error')"],"metadata":{"id":"kXpJ9MBIgVOe","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":13,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["np.mean(mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TwnVfsPihOZO","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":13,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"5827ac0e-6f08-4368-8260-c24b318eca05"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.5268253746355748"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["# Prediction\n","y_pred=LR.predict(x_test)"],"metadata":{"id":"xMvT1rxBhgFf","executionInfo":{"status":"ok","timestamp":1704268430519,"user_tz":-300,"elapsed":12,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(y_pred-y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":668},"id":"tBUbXeC-hxBk","executionInfo":{"status":"ok","timestamp":1704268431338,"user_tz":-300,"elapsed":830,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"3368bc62-584c-4ac9-b539-f8ffd240ecb7"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-66-2ec464f7eeeb>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(y_pred-y_test)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='MedHouseVal', ylabel='Density'>"]},"metadata":{},"execution_count":66},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","score=r2_score(y_pred,y_test)"],"metadata":{"id":"I7tWCRVoiBYO","executionInfo":{"status":"ok","timestamp":1704268431338,"user_tz":-300,"elapsed":12,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XvfC-UP4ijcq","executionInfo":{"status":"ok","timestamp":1704268431338,"user_tz":-300,"elapsed":11,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"5b0b7006-5983-40c8-d7e4-edd817d685ec"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3451339380943961"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":[],"metadata":{"id":"N2M9KUseMLl1","executionInfo":{"status":"ok","timestamp":1704268431338,"user_tz":-300,"elapsed":10,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["# Ridge and Lasso"],"metadata":{"id":"oh2Zry-CMP6j"}},{"cell_type":"markdown","source":["## Ridge"],"metadata":{"id":"LTeLbXhuTPwf"}},{"cell_type":"code","source":["from sklearn.linear_model import Ridge\n","from sklearn.model_selection import GridSearchCV"],"metadata":{"id":"9ej7aUkSMRkD","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":11,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["ridge=Ridge()"],"metadata":{"id":"OGIFeTe8RWvR","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":11,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["parameters = {'alpha':[1,2,3,10,20,40,50,60,80,90],}\n","ridgecv=GridSearchCV(ridge,parameters,scoring='neg_mean_squared_error',cv=5)\n","ridgecv.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":117},"id":"wTQxxEFcRqph","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":11,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"b8499757-71e1-471b-95a5-b83eaab77f5d"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=Ridge(),\n","             param_grid={'alpha': [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring='neg_mean_squared_error')"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=Ridge(),\n","             param_grid={&#x27;alpha&#x27;: [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=Ridge(),\n","             param_grid={&#x27;alpha&#x27;: [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["print(ridgecv.best_score_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CQqJ-CLoUMxa","executionInfo":{"status":"ok","timestamp":1704268471667,"user_tz":-300,"elapsed":2,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"bb5d1a3f-4a8e-4d1f-a23a-b077b61f04b8"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.5268197392903244\n"]}]},{"cell_type":"code","source":["print(ridgecv.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mzu3BcJYSTNv","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":10,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"ece6d596-008a-486b-cbeb-e5ed1af5f211"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["{'alpha': 10}\n"]}]},{"cell_type":"code","source":["ridge_pred=ridgecv.predict(x_test)"],"metadata":{"id":"wfibChkrSnlJ","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":9,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","score=r2_score(ridge_pred,y_test)"],"metadata":{"id":"8hqiRE2LS6BZ","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":8,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iw0LXP60TDx9","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":8,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"3b7c7ff2-496e-4b43-965a-f304b27f5a5c"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3425458182224228"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":[],"metadata":{"id":"OHwn0KvwTIcA","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":75,"outputs":[]},{"cell_type":"markdown","source":["## Lasso"],"metadata":{"id":"CwO3xDdUTRgY"}},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n"],"metadata":{"id":"FsN15QvUTSJA","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["lasso=Lasso()"],"metadata":{"id":"LKwa78sQTXhd","executionInfo":{"status":"ok","timestamp":1704268431339,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["parameters = {'alpha':[1,2,3,10,20,40,50,60,80,90],}\n","lassocv=GridSearchCV(lasso,parameters,scoring='neg_mean_squared_error',cv=5)\n","lassocv.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":117},"id":"SJEvpG4PTZFa","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":539,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"def64edd-d9a5-444c-9907-69fd340ef780"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=Lasso(),\n","             param_grid={'alpha': [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring='neg_mean_squared_error')"],"text/html":["<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=Lasso(),\n","             param_grid={&#x27;alpha&#x27;: [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=Lasso(),\n","             param_grid={&#x27;alpha&#x27;: [1, 2, 3, 10, 20, 40, 50, 60, 80, 90]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Lasso</label><div class=\"sk-toggleable__content\"><pre>Lasso()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Lasso</label><div class=\"sk-toggleable__content\"><pre>Lasso()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["print(lassocv.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iW_h1uEWTh5i","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":9,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"52354b6e-f81d-490d-a78d-95eeedde503c"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["{'alpha': 1}\n"]}]},{"cell_type":"code","source":["print(lassocv.best_score_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AdiyCocJTlbV","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":8,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"acbf1fe1-129c-4fc5-c29a-eb1ddf5d7613"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["-1.3400019579636542\n"]}]},{"cell_type":"code","source":["lasso_pred=lassocv.predict(x_test)"],"metadata":{"id":"2ORnad5TTvpO","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","score=r2_score(lasso_pred,y_test)"],"metadata":{"id":"i96QKvXTTrHn","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":7,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BRQw1tY-TuUb","executionInfo":{"status":"ok","timestamp":1704268431871,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}},"outputId":"36ef68cf-ce95-452f-e4cf-97b93cd9ffa9"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":[],"metadata":{"id":"w8ybaue7UALt","executionInfo":{"status":"ok","timestamp":1704268431872,"user_tz":-300,"elapsed":6,"user":{"displayName":"TALHA SIDDIQUE","userId":"16213719004269784609"}}},"execution_count":83,"outputs":[]}]}